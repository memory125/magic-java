<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.wing.mapper.UserMapper">

    <!--结果映射:对简单的语句做到零配置，对于复杂一点的语句，只需要描述语句之间的关系就行了-->
    <resultMap id="userResultMap" type="User">
     <result column="id" property="userId" />
     <result column="name" property="userName" />
     <result column="pwd" property="password" />
    </resultMap>

    <!--查询语句-->
    <select id="getUserList" resultMap="userResultMap">
        select * from wing.user
   </select>

    <!--根据Id查询用户信息-->
    <select id="getUserById" parameterType="int" resultMap="userResultMap" >
        select * from wing.user where id = #{id}
   </select>

    <!--根据name模糊查询用户信息-->
    <!--select * from wing.user where name like "%"#{name}"%"-->
    <select id="getUserByLike" resultMap="userResultMap" >
        select * from wing.user where name like #{name}
   </select>

    <!--添加用户-->
    <insert id="addUser" parameterType="user">
        insert into wing.user(id, name, pwd) values(#{id}, #{name}, #{pwd})
   </insert>

    <!--使用map作为参数时，比较灵活，数据库的列值对应map中的键和值-->
    <insert id="addUser2" parameterType="map">
        insert into wing.user(id, name, pwd) values(#{userId}, #{userName}, #{passWord})
   </insert>

    <!--更新用户信息-->
    <update id="updateUser" parameterType="user">
        update wing.user set name = #{name}, pwd = #{pwd} where id = #{id}
   </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
        delete from wing.user where id = #{id}
    </delete>

</mapper>